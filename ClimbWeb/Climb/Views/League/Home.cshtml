@using Climb.Services
@using Climb.Services.ModelServices
@using Climb.ViewModels.Leagues
@model HomeViewModel
@inject ICdnService cdnService
@inject ILeagueService leagueService

@{
    ViewBag.Title = "Leagues-Home";
}

<div class="container">
    <div id="home-header" class="d-flex flex-column justify-content-center mt-4">
        <h1>Welcome to @Model.League.Name</h1>
        @if (!Model.IsMember && Model.User != null)
        {
            <form asp-action="Join">
                <input type="hidden" name="leagueID" value="@Model.League.ID" />
                <input type="hidden" name="userID" value="@Model.User.Id" />
                <button>Join</button>
            </form>
        }
    </div>

    <div class="home-menu d-flex justify-content-between">
        <a asp-action="Home" asp-route-leaugeID="@Model.League.ID">Home</a>
        <a asp-action="Membership" asp-route-leagueID="@Model.League.ID">Membership</a>
        <a asp-action="Data" asp-route-leagueID="@Model.League.ID">Data</a>
        <a asp-action="Seasons" asp-route-leagueID="@Model.League.ID">Seasons</a>
        @*@foreach (var season in Model.League.Seasons)
            {
                <a asp-controller="Season" asp-action="Home" asp-route-seasonID="@season.ID">Season @(season.Index + 1)</a>
            }*@
        @if (Model.IsAdmin)
        {
            <a asp-action="Manage" asp-route-leagueID="@Model.League.ID">Manage</a>
        }
    </div>

    <!-- Columns -->
    <div class="row">
        <!-- Members -->
        <div class="col-xl-4 page-section pb-2 mt-4">
            <h3>Members</h3>
            <div class="page-section-child">
                @if (Model.Members.Count > 0)
                {
                <div class="page-section-content">
                    @foreach (var member in Model.Members)
                    {
                        <partial name="./Partials/LeagueUser" model="@await LeagueUserViewModel.Create(member, cdnService, true, Url, leagueService)" />
                    }
                    @if (Model.Newcomers.Count > 0)
                    {
                        <div class="section-divider">
                            <h5>Newcomers</h5>
                        </div>

                        foreach (var newcomer in Model.Newcomers)
                        {
                            <partial name="./Partials/LeagueUser" model="@await LeagueUserViewModel.Create(newcomer, cdnService, true, Url, leagueService)" />
                        }
                    }
                </div>
                }
                else
                {
                    <div class="text-darker">
                        <em>No members</em>
                    </div>
                }
            </div>
        </div>
        <!-- Activity -->
        <div class="col-xl-4 page-section pb-2 mt-4">
            <h3>Activity</h3>
            <div class="page-section-child">
                @*@if (Model.RecentSets.Count == 0)
                    {*@
                <div class="text-darker">
                    <em> No recent activity</em>
                </div>
                @*}
                    else
                    {
                        foreach (var set in Model.RecentSets)
                        {
                            <div>@set.ID</div>
                        }
                    }*@
            </div>

        </div>

        <!-- Sets -->
        <div class="col-xl-4 page-section pb-2 mt-4">
            <h3>Sets</h3>
            <div class="page-section-child">
                @*@foreach (var set in Model.AvailableSets)
                    {
                        <partial name="../Set/Partials/Details" model="@DetailsViewModel.Create(Model.User, set, cdnService)" />
                    }*@
                <div class="text-darker">
                    <em> No recent activity</em>
                </div>
            </div>
        </div>
    </div>

</div>