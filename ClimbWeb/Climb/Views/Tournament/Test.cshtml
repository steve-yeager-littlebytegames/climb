@model Climb.ViewModels.Tournaments.Test

@{
    Layout = "";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="google" content="notranslate">
    <partial name="./_Files"/>


    <style>
        
        .game-id {
            width: 20px;
            align-self: center;
        }

        .game-container {
            background-color: darkgray;
            margin: 4px 0;
        }

        .game-connector {
            border: grey 2px solid;
            border-left: 0;
            width: 40px;
        }

        .game-player-score {
            width: 20px;
            background-color: lightgray;
        }

        .game-player-border {
             border-bottom: 1px solid black;
            width: 100%;
        }

        .game-player-seed {
            background-color: gray;
            width: 30px;
        }
        .game-player-name {
            width: 120px;
            height: 25px;
            text-align: start;
            padding-left: 4px;
        }
    </style>
</head>
<body class="text-center">
<script src="~/lib/jquery/dist/jquery.min.js" type="text/javascript"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js" type="text/javascript"></script>
<script src="~/lib/jquery-validation/dist/additional-methods.js" type="text/javascript"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js" type="text/javascript"></script>
<script src="~/lib/bootstrap/js/bootstrap.js" type="text/javascript"></script>
<link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap-reboot.css"/>
<link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.css"/>
<link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap-grid.css"/>
<link rel="stylesheet" href="~/lib/font-awesome/css/all.css"/>
<script src="~/lib/jquery-bracket/jquery.bracket.min.js" type="text/javascript"></script>
<link rel="stylesheet" href="~/lib/jquery-bracket/jquery.bracket.min.css"/>


<div id="bracket" style="overflow: auto"></div>

<h1>Grand Finals</h1>
<div class="d-flex flex-column justify-content-around h-100 align-items-center">
    @foreach(var game in Model.Tournament.GrandFinals.Games)
    {
        <div class="d-flex">
            <div class="game-id">@game.ID</div>
            <div class="game-container">
                <div class="d-flex @(game.P1 != null ? "player" : "")" data-player-id="@game.P1">
                    <div class="game-player-seed">@(game.P1 + 1)</div>
                    <div class="game-player-name @(game.P1 == null ? "small" : "")">@(game.P1 == null ? $"from game {game.P1Game?.ID}" : $"Player {game.P1 + 1}")</div>
                    <div class="game-player-score">@game.P1Score</div>
                </div>
                <div class="game-player-border">
                </div>
                <div class="d-flex @(game.P2 != null ? "player" : "")" data-player-id="@game.P2">
                    <div class="game-player-seed">@(game.P2 + 1)</div>
                    <div class="game-player-name @(game.P2 == null ? "small" : "")">@(game.P2 == null ? $"from game {game.P2Game?.ID}" : $"Player {game.P2 + 1}")</div>
                    <div class="game-player-score">@game.P2Score</div>
                </div>
            </div>
        </div>
    }
</div>


<h1>Winners</h1>
<div class="d-flex">
    @foreach(var round in Model.Tournament.Winners.Rounds)
    {
        <div class="mr-5">
            <h4>Round @round.Index</h4>
                <div class="d-flex flex-column justify-content-around h-100">
                    @foreach(var game in round.Games)
                    {
                        <div class="d-flex">
                            <div class="game-id">@game.ID</div>
                            <div class="game-container">
                                <div class="d-flex @(game.P1 != null ? "player" : "")" data-player-id="@game.P1">
                                    <div class="game-player-seed">@(game.P1 + 1)</div>
                                    <div class="game-player-name @(game.P1 == null ? "small" : "")">@(game.P1 == null ? $"from game {game.P1Game?.ID}" : $"Player {game.P1 + 1}")</div>
                                    <div class="game-player-score">@game.P1Score</div>
                                </div>
                                <div class="game-player-border">
                                </div>
                                <div class="d-flex @(game.P2 != null ? "player" : "")" data-player-id="@game.P2">
                                    <div class="game-player-seed">@(game.P2 + 1)</div>
                                    <div class="game-player-name @(game.P2 == null ? "small" : "")">@(game.P2 == null ? $"from game {game.P2Game?.ID}" : $"Player {game.P2 + 1}")</div>
                                    <div class="game-player-score">@game.P2Score</div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
        </div>
    }
</div>

<h1>Losers</h1>
<div class="d-flex">
    @foreach(var round in Model.Tournament.Losers.Rounds)
                    {
        <div class="mr-5">
            <h4>Round @round.Index</h4>
            <div class="d-flex flex-column justify-content-around h-100">
                @foreach(var game in round.Games)
                {
                    <div class="d-flex">
                        <div class="game-id">@game.ID</div>
                        <div class="game-container">
                            <div class="d-flex @(game.P1 != null ? "player" : "")" data-player-id="@game.P1">
                                <div class="game-player-seed">@(game.P1 + 1)</div>
                                <div class="game-player-name @(game.P1 == null ? "small" : "")">@(game.P1 == null ? $"from game {game.P1Game?.ID}" : $"Player {game.P1 + 1}")</div>
                                <div class="game-player-score">@game.P1Score</div>
                            </div>
                            <div class="game-player-border">
                            </div>
                            <div class="d-flex @(game.P2 != null ? "player" : "")" data-player-id="@game.P2">
                                <div class="game-player-seed">@(game.P2 + 1)</div>
                                <div class="game-player-name @(game.P2 == null ? "small" : "")">@(game.P2 == null ? $"from game {game.P2Game?.ID}" : $"Player {game.P2 + 1}")</div>
                                <div class="game-player-score">@game.P2Score</div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>


@*<div>
            <h2>Winners</h2>
            @foreach(var round in Model.Tournament.Winners.Rounds)
            {
                <h3>Round @round.Index</h3>
                foreach(var game in round.Games)
                {
                    <div>@game</div>
                }
            }

            <h2>Losers</h2>
            @foreach(var round in Model.Tournament.Losers.Rounds)
            {
                <h3>Round @round.Index</h3>
                foreach(var game in round.Games)
                {
                    <div>@game</div>
                }
            }
        </div>*@

@*<script type="text/javascript">
            var doubleElimination = @Html.Raw(Model.BracketData);

            var container = $('#bracket');
            container.bracket({
                skipConsolationRound: true,
                init: doubleElimination
            });

        </script>*@

<script type="text/javascript">
    $(".player").hover(function(){
        const playerId = $(this).attr("data-player-id");
        $(`[data-player-id="${playerId}"]`).css("background-color", "crimson");

    }, function(){
        const playerId = $(this).attr("data-player-id");
        $(`[data-player-id="${playerId}"]`).css("background-color", "darkgray");
    });
</script>

</body>

</html>