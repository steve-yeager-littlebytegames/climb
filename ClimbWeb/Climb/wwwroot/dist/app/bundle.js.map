{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactRouterDOM\"","webpack:///./node_modules/react-hot-loader/index.js","webpack:///external \"ReactDOM\"","webpack:///./ClientApp/gen/climbClient.ts","webpack:///./ClientApp/components/SetDetails.tsx","webpack:///./ClientApp/components/MatchSummary.tsx","webpack:///./ClientApp/components/MatchEdit.tsx","webpack:///./ClientApp/components/SetCount.tsx","webpack:///./ClientApp/components/Submit.tsx","webpack:///./ClientApp/components/ReactApp.tsx","webpack:///./node_modules/react-hot-loader/dist/react-hot-loader.production.min.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactRouterDOM","ReactDOM","ClimbClient","BaseClass","[object Object]","defaultUrl","window","location","origin","localStorage","getItem","Admin","baseUrl","http","super","this","jsonParseReviver","undefined","getBaseUrl","url_","replace","options_","method","headers","Content-Type","Accept","fetch","then","_response","processMigrate","response","status","_headers","forEach","v","k","contentDisposition","fileNameMatch","exec","fileName","length","blob","data","text","_responseText","throwException","Promise","resolve","processUpdateAllLeagues","AccountApi","email","username","password","confirmPassword","rememberMe","Error","encodeURIComponent","processRegister","result201","resultData201","JSON","parse","UserDto","fromJS","result400","resultData400","processLogIn","result200","resultData200","authorization","userID","Authorization","processTest","processLogout","GameApi","gameID","processGet","GameDto","result404","resultData404","processListAll","constructor","Array","item","push","LeagueApi","LeagueDto","leagueID","adminID","processCreate","result409","resultData409","processJoin","LeagueUserDto","processGetUser","processGetSeasons","SeasonDto","processUpdateStandings","leagueUserID","processLeave","SeasonApi","seasonID","processSets","SetDto","processParticipants","SeasonLeagueUserDto","processListForLeague","startDate","endDate","toJSON","processStart","processEnd","participantID","SetApi","request","body","stringify","processSubmit","setID","requesterID","challengedID","message","processChallengeUser","SetRequestDto","requestID","accept","processRespondToChallenge","UserApi","image","content_","FormData","append","processUploadProfilePic","id","profilePic","result","init","characters","stages","CharacterDto","StageDto","charactersPerMatch","scoreName","matchName","maxMatchPoints","picture","organizationID","setsTillRank","dateCreated","Date","toString","activeSeasonID","toISOString","hasLeft","points","rank","profilePicture","index","isActive","isComplete","matches","leagueName","player1ID","player2ID","player1Score","player2Score","dueDate","updatedDate","MatchDto","isLocked","setType","player1Characters","player2Characters","stageID","SetTypes","standing","tieBreakerPoints","SubmitRequest","MatchForm","isOpen","SwaggerException","isSwaggerException","obj","SetDetails_SetDetails","external_React_","set","props","player1","player2","className","toLocaleDateString","src","width","height","href","MatchSummary_MatchSummary","renderCharacter","match","game","p1Characters","map","p2Characters","stageView","renderStage","onClick","onSelect","characterId","character","find","gC","title","stage","stageName","Submit_Submit","missingStageName","MatchEdit_MatchEdit","matchToEdit","slice","state","sort","c1","c2","localeCompare","s1","s2","canOk","stageInput","renderStageInput","onDelete","renderPlayerInputs","player1Name","player2Name","onCancel","disabled","onEdit","playerNumber","playerName","characterValues","score","characterInputs","onChange","e","updateCharacter","parseInt","currentTarget","type","readOnly","min","max","updateScore","stageValues","currentStage","stageOptions","splice","updateStage","setState","characterIndex","stageId","SetCount_SetCount","client","setId","params","selectedMatch","onSubmit","onAddMatch","onMatchEdited","onMatchCancelled","onMatchDelete","onSelectMatch","loadSet","canSubmit","a","b","loadGame","loadPlayers","catch","reason","gameId","alert","p1","p2","leagueClient","getUser","setRequest","matchForm","submit","console","log","reload","newMatch","prevMatch","external_ReactDOM_","react_hot_loader","external_ReactRouterDOM_","path","component","document","getElementById","default","_interopDefault","classCallCheck","TypeError","possibleConstructorReturn","ReferenceError","AppContainer","apply","arguments","writable","configurable","setPrototypeOf","__proto__","inherits","render","Children","only","children","Component","hot","areComponentsEqual","setConfig","cold"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/app/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = React;","module.exports = ReactRouterDOM;","'use strict'\n\nif (!module.hot || process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else {\n  module.exports = require('./dist/react-hot-loader.development.js');\n}\n","module.exports = ReactDOM;","/* tslint:disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v11.19.1.0 (NJsonSchema v9.10.72.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nexport module ClimbClient {\r\nexport class BaseClass {\r\n    getBaseUrl(defaultUrl: string) {\r\n        return window.location.origin;\r\n    }\r\n\r\n    getAuthorizationToken() {\r\n        return localStorage.getItem(\"jwt\");\r\n    }\r\n}\r\n\r\nexport class Admin extends BaseClass {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl(\"http://localhost:44320\");\r\n    }\r\n\r\n    migrate(key: string | null | undefined): Promise<FileResponse | null> {\r\n        let url_ = this.baseUrl + \"/admin/data/migrate\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"key\": key !== undefined && key !== null ? \"\" + key : \"\", \r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processMigrate(_response);\r\n        });\r\n    }\r\n\r\n    protected processMigrate(response: Response): Promise<FileResponse | null> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200 || status === 206) {\r\n            const contentDisposition = response.headers ? response.headers.get(\"content-disposition\") : undefined;\r\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\r\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\r\n            return response.blob().then(blob => { return { fileName: fileName, data: blob, status: status, headers: _headers }; });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<FileResponse | null>(<any>null);\r\n    }\r\n\r\n    updateAllLeagues(key: string | null | undefined): Promise<FileResponse | null> {\r\n        let url_ = this.baseUrl + \"/admin/update-all-leagues\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"key\": key !== undefined && key !== null ? \"\" + key : \"\", \r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processUpdateAllLeagues(_response);\r\n        });\r\n    }\r\n\r\n    protected processUpdateAllLeagues(response: Response): Promise<FileResponse | null> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200 || status === 206) {\r\n            const contentDisposition = response.headers ? response.headers.get(\"content-disposition\") : undefined;\r\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\r\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\r\n            return response.blob().then(blob => { return { fileName: fileName, data: blob, status: status, headers: _headers }; });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<FileResponse | null>(<any>null);\r\n    }\r\n}\r\n\r\nexport class AccountApi extends BaseClass {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl(\"http://localhost:44320\");\r\n    }\r\n\r\n    register(email: string | null, username: string | null, name: string | null | undefined, password: string | null, confirmPassword: string | null | undefined, rememberMe: boolean): Promise<UserDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/account/register?\";\r\n        if (email === undefined)\r\n            throw new Error(\"The parameter 'email' must be defined.\");\r\n        else\r\n            url_ += \"email=\" + encodeURIComponent(\"\" + email) + \"&\"; \r\n        if (username === undefined)\r\n            throw new Error(\"The parameter 'username' must be defined.\");\r\n        else\r\n            url_ += \"username=\" + encodeURIComponent(\"\" + username) + \"&\"; \r\n        if (name !== undefined)\r\n            url_ += \"name=\" + encodeURIComponent(\"\" + name) + \"&\"; \r\n        if (password === undefined)\r\n            throw new Error(\"The parameter 'password' must be defined.\");\r\n        else\r\n            url_ += \"password=\" + encodeURIComponent(\"\" + password) + \"&\"; \r\n        if (confirmPassword !== undefined)\r\n            url_ += \"confirmPassword=\" + encodeURIComponent(\"\" + confirmPassword) + \"&\"; \r\n        if (rememberMe === undefined || rememberMe === null)\r\n            throw new Error(\"The parameter 'rememberMe' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"rememberMe=\" + encodeURIComponent(\"\" + rememberMe) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processRegister(_response);\r\n        });\r\n    }\r\n\r\n    protected processRegister(response: Response): Promise<UserDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result201 = resultData201 ? UserDto.fromJS(resultData201) : new UserDto();\r\n            return result201;\r\n            });\r\n        } else if (status === 400) {\r\n            return response.text().then((_responseText) => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = resultData400 !== undefined ? resultData400 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result400);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<UserDto>(<any>null);\r\n    }\r\n\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean): Promise<string> {\r\n        let url_ = this.baseUrl + \"/api/v1/account/logIn?\";\r\n        if (email === undefined)\r\n            throw new Error(\"The parameter 'email' must be defined.\");\r\n        else\r\n            url_ += \"email=\" + encodeURIComponent(\"\" + email) + \"&\"; \r\n        if (password === undefined)\r\n            throw new Error(\"The parameter 'password' must be defined.\");\r\n        else\r\n            url_ += \"password=\" + encodeURIComponent(\"\" + password) + \"&\"; \r\n        if (rememberMe === undefined || rememberMe === null)\r\n            throw new Error(\"The parameter 'rememberMe' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"rememberMe=\" + encodeURIComponent(\"\" + rememberMe) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processLogIn(_response);\r\n        });\r\n    }\r\n\r\n    protected processLogIn(response: Response): Promise<string> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return result200;\r\n            });\r\n        } else if (status === 400) {\r\n            return response.text().then((_responseText) => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = resultData400 !== undefined ? resultData400 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result400);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<string>(<any>null);\r\n    }\r\n\r\n    test(authorization: string | null | undefined, userID: string | null): Promise<string> {\r\n        let url_ = this.baseUrl + \"/api/v1/account/test?\";\r\n        if (userID === undefined)\r\n            throw new Error(\"The parameter 'userID' must be defined.\");\r\n        else\r\n            url_ += \"userID=\" + encodeURIComponent(\"\" + userID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": authorization !== undefined && authorization !== null ? \"\" + authorization : \"\", \r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processTest(_response);\r\n        });\r\n    }\r\n\r\n    protected processTest(response: Response): Promise<string> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<string>(<any>null);\r\n    }\r\n\r\n    logout(authorization: string | null | undefined): Promise<string> {\r\n        let url_ = this.baseUrl + \"/api/v1/account/logOut\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": authorization !== undefined && authorization !== null ? \"\" + authorization : \"\", \r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processLogout(_response);\r\n        });\r\n    }\r\n\r\n    protected processLogout(response: Response): Promise<string> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<string>(<any>null);\r\n    }\r\n}\r\n\r\nexport class GameApi extends BaseClass {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl(\"http://localhost:44320\");\r\n    }\r\n\r\n    get(gameID: number): Promise<GameDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/games/{gameID}\";\r\n        if (gameID === undefined || gameID === null)\r\n            throw new Error(\"The parameter 'gameID' must be defined.\");\r\n        url_ = url_.replace(\"{gameID}\", encodeURIComponent(\"\" + gameID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGet(_response);\r\n        });\r\n    }\r\n\r\n    protected processGet(response: Response): Promise<GameDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? GameDto.fromJS(resultData200) : new GameDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<GameDto>(<any>null);\r\n    }\r\n\r\n    listAll(): Promise<GameDto[]> {\r\n        let url_ = this.baseUrl + \"/api/v1/games\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processListAll(_response);\r\n        });\r\n    }\r\n\r\n    protected processListAll(response: Response): Promise<GameDto[]> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (resultData200 && resultData200.constructor === Array) {\r\n                result200 = [];\r\n                for (let item of resultData200)\r\n                    result200.push(GameDto.fromJS(item));\r\n            }\r\n            return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<GameDto[]>(<any>null);\r\n    }\r\n}\r\n\r\nexport class LeagueApi extends BaseClass {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl(\"http://localhost:44320\");\r\n    }\r\n\r\n    listAll(): Promise<LeagueDto[]> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processListAll(_response);\r\n        });\r\n    }\r\n\r\n    protected processListAll(response: Response): Promise<LeagueDto[]> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (resultData200 && resultData200.constructor === Array) {\r\n                result200 = [];\r\n                for (let item of resultData200)\r\n                    result200.push(LeagueDto.fromJS(item));\r\n            }\r\n            return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<LeagueDto[]>(<any>null);\r\n    }\r\n\r\n    get(leagueID: number): Promise<LeagueDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues/{leagueID}\";\r\n        if (leagueID === undefined || leagueID === null)\r\n            throw new Error(\"The parameter 'leagueID' must be defined.\");\r\n        url_ = url_.replace(\"{leagueID}\", encodeURIComponent(\"\" + leagueID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGet(_response);\r\n        });\r\n    }\r\n\r\n    protected processGet(response: Response): Promise<LeagueDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? LeagueDto.fromJS(resultData200) : new LeagueDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<LeagueDto>(<any>null);\r\n    }\r\n\r\n    create(gameID: number, name: string | null, adminID: string | null | undefined): Promise<LeagueDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues/create?\";\r\n        if (gameID === undefined || gameID === null)\r\n            throw new Error(\"The parameter 'gameID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"gameID=\" + encodeURIComponent(\"\" + gameID) + \"&\"; \r\n        if (name === undefined)\r\n            throw new Error(\"The parameter 'name' must be defined.\");\r\n        else\r\n            url_ += \"name=\" + encodeURIComponent(\"\" + name) + \"&\"; \r\n        if (adminID !== undefined)\r\n            url_ += \"adminID=\" + encodeURIComponent(\"\" + adminID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processCreate(_response);\r\n        });\r\n    }\r\n\r\n    protected processCreate(response: Response): Promise<LeagueDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result201 = resultData201 ? LeagueDto.fromJS(resultData201) : new LeagueDto();\r\n            return result201;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status === 409) {\r\n            return response.text().then((_responseText) => {\r\n            let result409: any = null;\r\n            let resultData409 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result409 = resultData409 !== undefined ? resultData409 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result409);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<LeagueDto>(<any>null);\r\n    }\r\n\r\n    join(leagueID: number, userID: string | null): Promise<LeagueUserDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues/join?\";\r\n        if (leagueID === undefined || leagueID === null)\r\n            throw new Error(\"The parameter 'leagueID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"leagueID=\" + encodeURIComponent(\"\" + leagueID) + \"&\"; \r\n        if (userID === undefined)\r\n            throw new Error(\"The parameter 'userID' must be defined.\");\r\n        else\r\n            url_ += \"userID=\" + encodeURIComponent(\"\" + userID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processJoin(_response);\r\n        });\r\n    }\r\n\r\n    protected processJoin(response: Response): Promise<LeagueUserDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result201 = resultData201 ? LeagueUserDto.fromJS(resultData201) : new LeagueUserDto();\r\n            return result201;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<LeagueUserDto>(<any>null);\r\n    }\r\n\r\n    getUser(userID: number): Promise<LeagueUserDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues/user/{userID}\";\r\n        if (userID === undefined || userID === null)\r\n            throw new Error(\"The parameter 'userID' must be defined.\");\r\n        url_ = url_.replace(\"{userID}\", encodeURIComponent(\"\" + userID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGetUser(_response);\r\n        });\r\n    }\r\n\r\n    protected processGetUser(response: Response): Promise<LeagueUserDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? LeagueUserDto.fromJS(resultData200) : new LeagueUserDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<LeagueUserDto>(<any>null);\r\n    }\r\n\r\n    getSeasons(leagueID: number): Promise<SeasonDto[]> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues/seasons/{leagueID}\";\r\n        if (leagueID === undefined || leagueID === null)\r\n            throw new Error(\"The parameter 'leagueID' must be defined.\");\r\n        url_ = url_.replace(\"{leagueID}\", encodeURIComponent(\"\" + leagueID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGetSeasons(_response);\r\n        });\r\n    }\r\n\r\n    protected processGetSeasons(response: Response): Promise<SeasonDto[]> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (resultData200 && resultData200.constructor === Array) {\r\n                result200 = [];\r\n                for (let item of resultData200)\r\n                    result200.push(SeasonDto.fromJS(item));\r\n            }\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SeasonDto[]>(<any>null);\r\n    }\r\n\r\n    /**\r\n     * @param key (optional) \r\n     * @return League power rankings have been updated.\r\n     */\r\n    updateStandings(leagueID: number, key: string | null | undefined): Promise<LeagueDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues/update-standings/{leagueID}\";\r\n        if (leagueID === undefined || leagueID === null)\r\n            throw new Error(\"The parameter 'leagueID' must be defined.\");\r\n        url_ = url_.replace(\"{leagueID}\", encodeURIComponent(\"\" + leagueID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"key\": key !== undefined && key !== null ? \"\" + key : \"\", \r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processUpdateStandings(_response);\r\n        });\r\n    }\r\n\r\n    protected processUpdateStandings(response: Response): Promise<LeagueDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? LeagueDto.fromJS(resultData200) : new LeagueDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<LeagueDto>(<any>null);\r\n    }\r\n\r\n    leave(leagueUserID: number): Promise<LeagueUserDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/leagues/leave?\";\r\n        if (leagueUserID === undefined || leagueUserID === null)\r\n            throw new Error(\"The parameter 'leagueUserID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"leagueUserID=\" + encodeURIComponent(\"\" + leagueUserID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processLeave(_response);\r\n        });\r\n    }\r\n\r\n    protected processLeave(response: Response): Promise<LeagueUserDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? LeagueUserDto.fromJS(resultData200) : new LeagueUserDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<LeagueUserDto>(<any>null);\r\n    }\r\n}\r\n\r\nexport class SeasonApi extends BaseClass {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl(\"http://localhost:44320\");\r\n    }\r\n\r\n    get(seasonID: number): Promise<SeasonDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons/{seasonID}\";\r\n        if (seasonID === undefined || seasonID === null)\r\n            throw new Error(\"The parameter 'seasonID' must be defined.\");\r\n        url_ = url_.replace(\"{seasonID}\", encodeURIComponent(\"\" + seasonID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGet(_response);\r\n        });\r\n    }\r\n\r\n    protected processGet(response: Response): Promise<SeasonDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? SeasonDto.fromJS(resultData200) : new SeasonDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SeasonDto>(<any>null);\r\n    }\r\n\r\n    sets(seasonID: number): Promise<SetDto[]> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons/sets/{seasonID}\";\r\n        if (seasonID === undefined || seasonID === null)\r\n            throw new Error(\"The parameter 'seasonID' must be defined.\");\r\n        url_ = url_.replace(\"{seasonID}\", encodeURIComponent(\"\" + seasonID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processSets(_response);\r\n        });\r\n    }\r\n\r\n    protected processSets(response: Response): Promise<SetDto[]> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (resultData200 && resultData200.constructor === Array) {\r\n                result200 = [];\r\n                for (let item of resultData200)\r\n                    result200.push(SetDto.fromJS(item));\r\n            }\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SetDto[]>(<any>null);\r\n    }\r\n\r\n    participants(seasonID: number): Promise<SeasonLeagueUserDto[]> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons/participants/{seasonID}\";\r\n        if (seasonID === undefined || seasonID === null)\r\n            throw new Error(\"The parameter 'seasonID' must be defined.\");\r\n        url_ = url_.replace(\"{seasonID}\", encodeURIComponent(\"\" + seasonID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processParticipants(_response);\r\n        });\r\n    }\r\n\r\n    protected processParticipants(response: Response): Promise<SeasonLeagueUserDto[]> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (resultData200 && resultData200.constructor === Array) {\r\n                result200 = [];\r\n                for (let item of resultData200)\r\n                    result200.push(SeasonLeagueUserDto.fromJS(item));\r\n            }\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SeasonLeagueUserDto[]>(<any>null);\r\n    }\r\n\r\n    listForLeague(leagueID: number): Promise<SeasonDto[]> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons?\";\r\n        if (leagueID === undefined || leagueID === null)\r\n            throw new Error(\"The parameter 'leagueID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"leagueID=\" + encodeURIComponent(\"\" + leagueID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processListForLeague(_response);\r\n        });\r\n    }\r\n\r\n    protected processListForLeague(response: Response): Promise<SeasonDto[]> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (resultData200 && resultData200.constructor === Array) {\r\n                result200 = [];\r\n                for (let item of resultData200)\r\n                    result200.push(SeasonDto.fromJS(item));\r\n            }\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SeasonDto[]>(<any>null);\r\n    }\r\n\r\n    create(leagueID: number, startDate: Date, endDate: Date): Promise<SeasonDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons/create?\";\r\n        if (leagueID === undefined || leagueID === null)\r\n            throw new Error(\"The parameter 'leagueID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"leagueID=\" + encodeURIComponent(\"\" + leagueID) + \"&\"; \r\n        if (startDate === undefined || startDate === null)\r\n            throw new Error(\"The parameter 'startDate' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"startDate=\" + encodeURIComponent(startDate ? \"\" + startDate.toJSON() : \"\") + \"&\"; \r\n        if (endDate === undefined || endDate === null)\r\n            throw new Error(\"The parameter 'endDate' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"endDate=\" + encodeURIComponent(endDate ? \"\" + endDate.toJSON() : \"\") + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processCreate(_response);\r\n        });\r\n    }\r\n\r\n    protected processCreate(response: Response): Promise<SeasonDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result201 = resultData201 ? SeasonDto.fromJS(resultData201) : new SeasonDto();\r\n            return result201;\r\n            });\r\n        } else if (status === 400) {\r\n            return response.text().then((_responseText) => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = resultData400 !== undefined ? resultData400 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result400);\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SeasonDto>(<any>null);\r\n    }\r\n\r\n    start(seasonID: number): Promise<SetDto[]> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons/start?\";\r\n        if (seasonID === undefined || seasonID === null)\r\n            throw new Error(\"The parameter 'seasonID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"seasonID=\" + encodeURIComponent(\"\" + seasonID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processStart(_response);\r\n        });\r\n    }\r\n\r\n    protected processStart(response: Response): Promise<SetDto[]> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (resultData201 && resultData201.constructor === Array) {\r\n                result201 = [];\r\n                for (let item of resultData201)\r\n                    result201.push(SetDto.fromJS(item));\r\n            }\r\n            return result201;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SetDto[]>(<any>null);\r\n    }\r\n\r\n    end(seasonID: number): Promise<SeasonDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons/end?\";\r\n        if (seasonID === undefined || seasonID === null)\r\n            throw new Error(\"The parameter 'seasonID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"seasonID=\" + encodeURIComponent(\"\" + seasonID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processEnd(_response);\r\n        });\r\n    }\r\n\r\n    protected processEnd(response: Response): Promise<SeasonDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? SeasonDto.fromJS(resultData200) : new SeasonDto();\r\n            return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SeasonDto>(<any>null);\r\n    }\r\n\r\n    leave(participantID: number): Promise<SeasonDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/seasons/leave?\";\r\n        if (participantID === undefined || participantID === null)\r\n            throw new Error(\"The parameter 'participantID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"participantID=\" + encodeURIComponent(\"\" + participantID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processLeave(_response);\r\n        });\r\n    }\r\n\r\n    protected processLeave(response: Response): Promise<SeasonDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? SeasonDto.fromJS(resultData200) : new SeasonDto();\r\n            return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SeasonDto>(<any>null);\r\n    }\r\n}\r\n\r\nexport class SetApi extends BaseClass {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl(\"http://localhost:44320\");\r\n    }\r\n\r\n    submit(request: SubmitRequest | null): Promise<SetDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/sets/submit\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(request);\r\n\r\n        let options_ = <RequestInit>{\r\n            body: content_,\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processSubmit(_response);\r\n        });\r\n    }\r\n\r\n    protected processSubmit(response: Response): Promise<SetDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? SetDto.fromJS(resultData200) : new SetDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status === 400) {\r\n            return response.text().then((_responseText) => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = resultData400 !== undefined ? resultData400 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result400);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SetDto>(<any>null);\r\n    }\r\n\r\n    get(setID: number): Promise<SetDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/sets/{setID}\";\r\n        if (setID === undefined || setID === null)\r\n            throw new Error(\"The parameter 'setID' must be defined.\");\r\n        url_ = url_.replace(\"{setID}\", encodeURIComponent(\"\" + setID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGet(_response);\r\n        });\r\n    }\r\n\r\n    protected processGet(response: Response): Promise<SetDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? SetDto.fromJS(resultData200) : new SetDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SetDto>(<any>null);\r\n    }\r\n\r\n    challengeUser(requesterID: number, challengedID: number, message: string | null): Promise<SetRequestDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/sets/challenge?\";\r\n        if (requesterID === undefined || requesterID === null)\r\n            throw new Error(\"The parameter 'requesterID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"requesterID=\" + encodeURIComponent(\"\" + requesterID) + \"&\"; \r\n        if (challengedID === undefined || challengedID === null)\r\n            throw new Error(\"The parameter 'challengedID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"challengedID=\" + encodeURIComponent(\"\" + challengedID) + \"&\"; \r\n        if (message === undefined)\r\n            throw new Error(\"The parameter 'message' must be defined.\");\r\n        else\r\n            url_ += \"message=\" + encodeURIComponent(\"\" + message) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processChallengeUser(_response);\r\n        });\r\n    }\r\n\r\n    protected processChallengeUser(response: Response): Promise<SetRequestDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result201 = resultData201 ? SetRequestDto.fromJS(resultData201) : new SetRequestDto();\r\n            return result201;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SetRequestDto>(<any>null);\r\n    }\r\n\r\n    respondToChallenge(requestID: number, accept: boolean): Promise<SetRequestDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/sets/respondToChallenge?\";\r\n        if (requestID === undefined || requestID === null)\r\n            throw new Error(\"The parameter 'requestID' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"requestID=\" + encodeURIComponent(\"\" + requestID) + \"&\"; \r\n        if (accept === undefined || accept === null)\r\n            throw new Error(\"The parameter 'accept' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"accept=\" + encodeURIComponent(\"\" + accept) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processRespondToChallenge(_response);\r\n        });\r\n    }\r\n\r\n    protected processRespondToChallenge(response: Response): Promise<SetRequestDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? SetRequestDto.fromJS(resultData200) : new SetRequestDto();\r\n            return result200;\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<SetRequestDto>(<any>null);\r\n    }\r\n}\r\n\r\nexport class UserApi extends BaseClass {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : <any>window;\r\n        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl(\"http://localhost:44320\");\r\n    }\r\n\r\n    get(userID: string): Promise<UserDto> {\r\n        let url_ = this.baseUrl + \"/api/v1/users/{userID}\";\r\n        if (userID === undefined || userID === null)\r\n            throw new Error(\"The parameter 'userID' must be defined.\");\r\n        url_ = url_.replace(\"{userID}\", encodeURIComponent(\"\" + userID)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ = <RequestInit>{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processGet(_response);\r\n        });\r\n    }\r\n\r\n    protected processGet(response: Response): Promise<UserDto> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 ? UserDto.fromJS(resultData200) : new UserDto();\r\n            return result200;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<UserDto>(<any>null);\r\n    }\r\n\r\n    /**\r\n     * @param image (optional) \r\n     * @return Profile picture URL.\r\n     */\r\n    uploadProfilePic(userID: string | null, image: FileParameter | null | undefined): Promise<string> {\r\n        let url_ = this.baseUrl + \"/api/v1/users/uploadProfilePic?\";\r\n        if (userID === undefined)\r\n            throw new Error(\"The parameter 'userID' must be defined.\");\r\n        else\r\n            url_ += \"userID=\" + encodeURIComponent(\"\" + userID) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = new FormData();\r\n        if (image !== null && image !== undefined)\r\n            content_.append(\"image\", image.data, image.fileName ? image.fileName : \"image\");\r\n\r\n        let options_ = <RequestInit>{\r\n            body: content_,\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.http.fetch(url_, options_).then((_response: Response) => {\r\n            return this.processUploadProfilePic(_response);\r\n        });\r\n    }\r\n\r\n    protected processUploadProfilePic(response: Response): Promise<string> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result201 = resultData201 !== undefined ? resultData201 : <any>null;\r\n            return result201;\r\n            });\r\n        } else if (status === 404) {\r\n            return response.text().then((_responseText) => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = resultData404 !== undefined ? resultData404 : <any>null;\r\n            return throwException(\"A server error occurred.\", status, _responseText, _headers, result404);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<string>(<any>null);\r\n    }\r\n}\r\n\r\nexport class UserDto implements IUserDto {\r\n    id!: string;\r\n    username!: string;\r\n    email!: string;\r\n    profilePic!: string;\r\n\r\n    constructor(data?: IUserDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.username = data[\"username\"];\r\n            this.email = data[\"email\"];\r\n            this.profilePic = data[\"profilePic\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UserDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UserDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"username\"] = this.username;\r\n        data[\"email\"] = this.email;\r\n        data[\"profilePic\"] = this.profilePic;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUserDto {\r\n    id: string;\r\n    username: string;\r\n    email: string;\r\n    profilePic: string;\r\n}\r\n\r\nexport class GameDto implements IGameDto {\r\n    id!: number;\r\n    name!: string;\r\n    characters!: CharacterDto[];\r\n    stages!: StageDto[];\r\n    charactersPerMatch!: number;\r\n    scoreName!: string;\r\n    matchName!: string;\r\n    maxMatchPoints!: number;\r\n\r\n    constructor(data?: IGameDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n        if (!data) {\r\n            this.characters = [];\r\n            this.stages = [];\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.name = data[\"name\"];\r\n            if (data[\"characters\"] && data[\"characters\"].constructor === Array) {\r\n                this.characters = [];\r\n                for (let item of data[\"characters\"])\r\n                    this.characters.push(CharacterDto.fromJS(item));\r\n            }\r\n            if (data[\"stages\"] && data[\"stages\"].constructor === Array) {\r\n                this.stages = [];\r\n                for (let item of data[\"stages\"])\r\n                    this.stages.push(StageDto.fromJS(item));\r\n            }\r\n            this.charactersPerMatch = data[\"charactersPerMatch\"];\r\n            this.scoreName = data[\"scoreName\"];\r\n            this.matchName = data[\"matchName\"];\r\n            this.maxMatchPoints = data[\"maxMatchPoints\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): GameDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new GameDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"name\"] = this.name;\r\n        if (this.characters && this.characters.constructor === Array) {\r\n            data[\"characters\"] = [];\r\n            for (let item of this.characters)\r\n                data[\"characters\"].push(item.toJSON());\r\n        }\r\n        if (this.stages && this.stages.constructor === Array) {\r\n            data[\"stages\"] = [];\r\n            for (let item of this.stages)\r\n                data[\"stages\"].push(item.toJSON());\r\n        }\r\n        data[\"charactersPerMatch\"] = this.charactersPerMatch;\r\n        data[\"scoreName\"] = this.scoreName;\r\n        data[\"matchName\"] = this.matchName;\r\n        data[\"maxMatchPoints\"] = this.maxMatchPoints;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IGameDto {\r\n    id: number;\r\n    name: string;\r\n    characters: CharacterDto[];\r\n    stages: StageDto[];\r\n    charactersPerMatch: number;\r\n    scoreName: string;\r\n    matchName: string;\r\n    maxMatchPoints: number;\r\n}\r\n\r\nexport class CharacterDto implements ICharacterDto {\r\n    id!: number;\r\n    name!: string;\r\n    picture!: string;\r\n\r\n    constructor(data?: ICharacterDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.name = data[\"name\"];\r\n            this.picture = data[\"picture\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CharacterDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CharacterDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"name\"] = this.name;\r\n        data[\"picture\"] = this.picture;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ICharacterDto {\r\n    id: number;\r\n    name: string;\r\n    picture: string;\r\n}\r\n\r\nexport class StageDto implements IStageDto {\r\n    id!: number;\r\n    name!: string;\r\n\r\n    constructor(data?: IStageDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.name = data[\"name\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): StageDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new StageDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"name\"] = this.name;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IStageDto {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport class LeagueDto implements ILeagueDto {\r\n    id!: number;\r\n    gameID!: number;\r\n    organizationID?: number | undefined;\r\n    name?: string | undefined;\r\n    setsTillRank!: number;\r\n    dateCreated!: Date;\r\n    adminID?: string | undefined;\r\n    activeSeasonID?: number | undefined;\r\n\r\n    constructor(data?: ILeagueDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.gameID = data[\"gameID\"];\r\n            this.organizationID = data[\"organizationID\"];\r\n            this.name = data[\"name\"];\r\n            this.setsTillRank = data[\"setsTillRank\"];\r\n            this.dateCreated = data[\"dateCreated\"] ? new Date(data[\"dateCreated\"].toString()) : <any>undefined;\r\n            this.adminID = data[\"adminID\"];\r\n            this.activeSeasonID = data[\"activeSeasonID\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): LeagueDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new LeagueDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"gameID\"] = this.gameID;\r\n        data[\"organizationID\"] = this.organizationID;\r\n        data[\"name\"] = this.name;\r\n        data[\"setsTillRank\"] = this.setsTillRank;\r\n        data[\"dateCreated\"] = this.dateCreated ? this.dateCreated.toISOString() : <any>undefined;\r\n        data[\"adminID\"] = this.adminID;\r\n        data[\"activeSeasonID\"] = this.activeSeasonID;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ILeagueDto {\r\n    id: number;\r\n    gameID: number;\r\n    organizationID?: number | undefined;\r\n    name?: string | undefined;\r\n    setsTillRank: number;\r\n    dateCreated: Date;\r\n    adminID?: string | undefined;\r\n    activeSeasonID?: number | undefined;\r\n}\r\n\r\nexport class LeagueUserDto implements ILeagueUserDto {\r\n    id!: number;\r\n    leagueID!: number;\r\n    userID!: string;\r\n    hasLeft!: boolean;\r\n    username!: string;\r\n    points!: number;\r\n    rank!: number;\r\n    profilePicture?: string | undefined;\r\n\r\n    constructor(data?: ILeagueUserDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.leagueID = data[\"leagueID\"];\r\n            this.userID = data[\"userID\"];\r\n            this.hasLeft = data[\"hasLeft\"];\r\n            this.username = data[\"username\"];\r\n            this.points = data[\"points\"];\r\n            this.rank = data[\"rank\"];\r\n            this.profilePicture = data[\"profilePicture\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): LeagueUserDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new LeagueUserDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"leagueID\"] = this.leagueID;\r\n        data[\"userID\"] = this.userID;\r\n        data[\"hasLeft\"] = this.hasLeft;\r\n        data[\"username\"] = this.username;\r\n        data[\"points\"] = this.points;\r\n        data[\"rank\"] = this.rank;\r\n        data[\"profilePicture\"] = this.profilePicture;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ILeagueUserDto {\r\n    id: number;\r\n    leagueID: number;\r\n    userID: string;\r\n    hasLeft: boolean;\r\n    username: string;\r\n    points: number;\r\n    rank: number;\r\n    profilePicture?: string | undefined;\r\n}\r\n\r\nexport class SeasonDto implements ISeasonDto {\r\n    id!: number;\r\n    leagueID!: number;\r\n    index!: number;\r\n    startDate!: Date;\r\n    endDate!: Date;\r\n    isActive!: boolean;\r\n    isComplete!: boolean;\r\n\r\n    constructor(data?: ISeasonDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.leagueID = data[\"leagueID\"];\r\n            this.index = data[\"index\"];\r\n            this.startDate = data[\"startDate\"] ? new Date(data[\"startDate\"].toString()) : <any>undefined;\r\n            this.endDate = data[\"endDate\"] ? new Date(data[\"endDate\"].toString()) : <any>undefined;\r\n            this.isActive = data[\"isActive\"];\r\n            this.isComplete = data[\"isComplete\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): SeasonDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new SeasonDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"leagueID\"] = this.leagueID;\r\n        data[\"index\"] = this.index;\r\n        data[\"startDate\"] = this.startDate ? this.startDate.toISOString() : <any>undefined;\r\n        data[\"endDate\"] = this.endDate ? this.endDate.toISOString() : <any>undefined;\r\n        data[\"isActive\"] = this.isActive;\r\n        data[\"isComplete\"] = this.isComplete;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ISeasonDto {\r\n    id: number;\r\n    leagueID: number;\r\n    index: number;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    isActive: boolean;\r\n    isComplete: boolean;\r\n}\r\n\r\nexport class SetDto implements ISetDto {\r\n    id!: number;\r\n    leagueID!: number;\r\n    leagueName?: string | undefined;\r\n    seasonID?: number | undefined;\r\n    gameID!: number;\r\n    player1ID!: number;\r\n    player2ID!: number;\r\n    player1Score!: number;\r\n    player2Score!: number;\r\n    dueDate!: Date;\r\n    updatedDate?: Date | undefined;\r\n    matches!: MatchDto[];\r\n    isLocked!: boolean;\r\n    isComplete!: boolean;\r\n    setType!: SetTypes;\r\n\r\n    constructor(data?: ISetDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n        if (!data) {\r\n            this.matches = [];\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.leagueID = data[\"leagueID\"];\r\n            this.leagueName = data[\"leagueName\"];\r\n            this.seasonID = data[\"seasonID\"];\r\n            this.gameID = data[\"gameID\"];\r\n            this.player1ID = data[\"player1ID\"];\r\n            this.player2ID = data[\"player2ID\"];\r\n            this.player1Score = data[\"player1Score\"];\r\n            this.player2Score = data[\"player2Score\"];\r\n            this.dueDate = data[\"dueDate\"] ? new Date(data[\"dueDate\"].toString()) : <any>undefined;\r\n            this.updatedDate = data[\"updatedDate\"] ? new Date(data[\"updatedDate\"].toString()) : <any>undefined;\r\n            if (data[\"matches\"] && data[\"matches\"].constructor === Array) {\r\n                this.matches = [];\r\n                for (let item of data[\"matches\"])\r\n                    this.matches.push(MatchDto.fromJS(item));\r\n            }\r\n            this.isLocked = data[\"isLocked\"];\r\n            this.isComplete = data[\"isComplete\"];\r\n            this.setType = data[\"setType\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): SetDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new SetDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"leagueID\"] = this.leagueID;\r\n        data[\"leagueName\"] = this.leagueName;\r\n        data[\"seasonID\"] = this.seasonID;\r\n        data[\"gameID\"] = this.gameID;\r\n        data[\"player1ID\"] = this.player1ID;\r\n        data[\"player2ID\"] = this.player2ID;\r\n        data[\"player1Score\"] = this.player1Score;\r\n        data[\"player2Score\"] = this.player2Score;\r\n        data[\"dueDate\"] = this.dueDate ? this.dueDate.toISOString() : <any>undefined;\r\n        data[\"updatedDate\"] = this.updatedDate ? this.updatedDate.toISOString() : <any>undefined;\r\n        if (this.matches && this.matches.constructor === Array) {\r\n            data[\"matches\"] = [];\r\n            for (let item of this.matches)\r\n                data[\"matches\"].push(item.toJSON());\r\n        }\r\n        data[\"isLocked\"] = this.isLocked;\r\n        data[\"isComplete\"] = this.isComplete;\r\n        data[\"setType\"] = this.setType;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ISetDto {\r\n    id: number;\r\n    leagueID: number;\r\n    leagueName?: string | undefined;\r\n    seasonID?: number | undefined;\r\n    gameID: number;\r\n    player1ID: number;\r\n    player2ID: number;\r\n    player1Score: number;\r\n    player2Score: number;\r\n    dueDate: Date;\r\n    updatedDate?: Date | undefined;\r\n    matches: MatchDto[];\r\n    isLocked: boolean;\r\n    isComplete: boolean;\r\n    setType: SetTypes;\r\n}\r\n\r\nexport class MatchDto implements IMatchDto {\r\n    id!: number;\r\n    index!: number;\r\n    player1Score!: number;\r\n    player2Score!: number;\r\n    player1Characters!: number[];\r\n    player2Characters!: number[];\r\n    stageID?: number | undefined;\r\n\r\n    constructor(data?: IMatchDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n        if (!data) {\r\n            this.player1Characters = [];\r\n            this.player2Characters = [];\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.index = data[\"index\"];\r\n            this.player1Score = data[\"player1Score\"];\r\n            this.player2Score = data[\"player2Score\"];\r\n            if (data[\"player1Characters\"] && data[\"player1Characters\"].constructor === Array) {\r\n                this.player1Characters = [];\r\n                for (let item of data[\"player1Characters\"])\r\n                    this.player1Characters.push(item);\r\n            }\r\n            if (data[\"player2Characters\"] && data[\"player2Characters\"].constructor === Array) {\r\n                this.player2Characters = [];\r\n                for (let item of data[\"player2Characters\"])\r\n                    this.player2Characters.push(item);\r\n            }\r\n            this.stageID = data[\"stageID\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): MatchDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new MatchDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"index\"] = this.index;\r\n        data[\"player1Score\"] = this.player1Score;\r\n        data[\"player2Score\"] = this.player2Score;\r\n        if (this.player1Characters && this.player1Characters.constructor === Array) {\r\n            data[\"player1Characters\"] = [];\r\n            for (let item of this.player1Characters)\r\n                data[\"player1Characters\"].push(item);\r\n        }\r\n        if (this.player2Characters && this.player2Characters.constructor === Array) {\r\n            data[\"player2Characters\"] = [];\r\n            for (let item of this.player2Characters)\r\n                data[\"player2Characters\"].push(item);\r\n        }\r\n        data[\"stageID\"] = this.stageID;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IMatchDto {\r\n    id: number;\r\n    index: number;\r\n    player1Score: number;\r\n    player2Score: number;\r\n    player1Characters: number[];\r\n    player2Characters: number[];\r\n    stageID?: number | undefined;\r\n}\r\n\r\nexport enum SetTypes {\r\n    Challenge = 0, \r\n    Season = 1, \r\n}\r\n\r\nexport class SeasonLeagueUserDto implements ISeasonLeagueUserDto {\r\n    id!: number;\r\n    seasonID!: number;\r\n    leagueUserID!: number;\r\n    userID?: string | undefined;\r\n    standing!: number;\r\n    points!: number;\r\n    tieBreakerPoints!: number;\r\n    hasLeft!: boolean;\r\n    profilePic?: string | undefined;\r\n\r\n    constructor(data?: ISeasonLeagueUserDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.seasonID = data[\"seasonID\"];\r\n            this.leagueUserID = data[\"leagueUserID\"];\r\n            this.userID = data[\"userID\"];\r\n            this.standing = data[\"standing\"];\r\n            this.points = data[\"points\"];\r\n            this.tieBreakerPoints = data[\"tieBreakerPoints\"];\r\n            this.hasLeft = data[\"hasLeft\"];\r\n            this.profilePic = data[\"profilePic\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): SeasonLeagueUserDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new SeasonLeagueUserDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"seasonID\"] = this.seasonID;\r\n        data[\"leagueUserID\"] = this.leagueUserID;\r\n        data[\"userID\"] = this.userID;\r\n        data[\"standing\"] = this.standing;\r\n        data[\"points\"] = this.points;\r\n        data[\"tieBreakerPoints\"] = this.tieBreakerPoints;\r\n        data[\"hasLeft\"] = this.hasLeft;\r\n        data[\"profilePic\"] = this.profilePic;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ISeasonLeagueUserDto {\r\n    id: number;\r\n    seasonID: number;\r\n    leagueUserID: number;\r\n    userID?: string | undefined;\r\n    standing: number;\r\n    points: number;\r\n    tieBreakerPoints: number;\r\n    hasLeft: boolean;\r\n    profilePic?: string | undefined;\r\n}\r\n\r\nexport class SubmitRequest implements ISubmitRequest {\r\n    setID!: number;\r\n    matches!: MatchForm[];\r\n\r\n    constructor(data?: ISubmitRequest) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n        if (!data) {\r\n            this.matches = [];\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.setID = data[\"setID\"];\r\n            if (data[\"matches\"] && data[\"matches\"].constructor === Array) {\r\n                this.matches = [];\r\n                for (let item of data[\"matches\"])\r\n                    this.matches.push(MatchForm.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): SubmitRequest {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new SubmitRequest();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"setID\"] = this.setID;\r\n        if (this.matches && this.matches.constructor === Array) {\r\n            data[\"matches\"] = [];\r\n            for (let item of this.matches)\r\n                data[\"matches\"].push(item.toJSON());\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ISubmitRequest {\r\n    setID: number;\r\n    matches: MatchForm[];\r\n}\r\n\r\nexport class MatchForm implements IMatchForm {\r\n    player1Score!: number;\r\n    player2Score!: number;\r\n    player1Characters!: number[];\r\n    player2Characters!: number[];\r\n    stageID?: number | undefined;\r\n\r\n    constructor(data?: IMatchForm) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n        if (!data) {\r\n            this.player1Characters = [];\r\n            this.player2Characters = [];\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.player1Score = data[\"player1Score\"];\r\n            this.player2Score = data[\"player2Score\"];\r\n            if (data[\"player1Characters\"] && data[\"player1Characters\"].constructor === Array) {\r\n                this.player1Characters = [];\r\n                for (let item of data[\"player1Characters\"])\r\n                    this.player1Characters.push(item);\r\n            }\r\n            if (data[\"player2Characters\"] && data[\"player2Characters\"].constructor === Array) {\r\n                this.player2Characters = [];\r\n                for (let item of data[\"player2Characters\"])\r\n                    this.player2Characters.push(item);\r\n            }\r\n            this.stageID = data[\"stageID\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): MatchForm {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new MatchForm();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"player1Score\"] = this.player1Score;\r\n        data[\"player2Score\"] = this.player2Score;\r\n        if (this.player1Characters && this.player1Characters.constructor === Array) {\r\n            data[\"player1Characters\"] = [];\r\n            for (let item of this.player1Characters)\r\n                data[\"player1Characters\"].push(item);\r\n        }\r\n        if (this.player2Characters && this.player2Characters.constructor === Array) {\r\n            data[\"player2Characters\"] = [];\r\n            for (let item of this.player2Characters)\r\n                data[\"player2Characters\"].push(item);\r\n        }\r\n        data[\"stageID\"] = this.stageID;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IMatchForm {\r\n    player1Score: number;\r\n    player2Score: number;\r\n    player1Characters: number[];\r\n    player2Characters: number[];\r\n    stageID?: number | undefined;\r\n}\r\n\r\nexport class SetRequestDto implements ISetRequestDto {\r\n    id!: number;\r\n    leagueID!: number;\r\n    requesterID!: number;\r\n    challengedID!: number;\r\n    dateCreated!: Date;\r\n    setID?: number | undefined;\r\n    isOpen!: boolean;\r\n    message?: string | undefined;\r\n\r\n    constructor(data?: ISetRequestDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(data?: any) {\r\n        if (data) {\r\n            this.id = data[\"id\"];\r\n            this.leagueID = data[\"leagueID\"];\r\n            this.requesterID = data[\"requesterID\"];\r\n            this.challengedID = data[\"challengedID\"];\r\n            this.dateCreated = data[\"dateCreated\"] ? new Date(data[\"dateCreated\"].toString()) : <any>undefined;\r\n            this.setID = data[\"setID\"];\r\n            this.isOpen = data[\"isOpen\"];\r\n            this.message = data[\"message\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): SetRequestDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new SetRequestDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"leagueID\"] = this.leagueID;\r\n        data[\"requesterID\"] = this.requesterID;\r\n        data[\"challengedID\"] = this.challengedID;\r\n        data[\"dateCreated\"] = this.dateCreated ? this.dateCreated.toISOString() : <any>undefined;\r\n        data[\"setID\"] = this.setID;\r\n        data[\"isOpen\"] = this.isOpen;\r\n        data[\"message\"] = this.message;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ISetRequestDto {\r\n    id: number;\r\n    leagueID: number;\r\n    requesterID: number;\r\n    challengedID: number;\r\n    dateCreated: Date;\r\n    setID?: number | undefined;\r\n    isOpen: boolean;\r\n    message?: string | undefined;\r\n}\r\n\r\nexport interface FileParameter {\r\n    data: any;\r\n    fileName: string;\r\n}\r\n\r\nexport interface FileResponse {\r\n    data: Blob;\r\n    status: number;\r\n    fileName?: string;\r\n    headers?: { [name: string]: any };\r\n}\r\n\r\nexport class SwaggerException extends Error {\r\n    message: string;\r\n    status: number; \r\n    response: string; \r\n    headers: { [key: string]: any; };\r\n    result: any; \r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isSwaggerException = true;\r\n\r\n    static isSwaggerException(obj: any): obj is SwaggerException {\r\n        return obj.isSwaggerException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {\r\n    if(result !== null && result !== undefined)\r\n        throw result;\r\n    else\r\n        throw new SwaggerException(message, status, response, headers, null);\r\n}\r\n\r\n}","import * as React from \"react\";\r\nimport { ClimbClient } from \"../gen/climbClient\";\r\n\r\ninterface ISetDetailsProps {\r\n    set: ClimbClient.SetDto;\r\n    player1: ClimbClient.LeagueUserDto;\r\n    player2: ClimbClient.LeagueUserDto;\r\n}\r\n\r\nexport class SetDetails extends React.Component<ISetDetailsProps> {\r\n    render() {\r\n        const set = this.props.set;\r\n        const player1 = this.props.player1;\r\n        const player2 = this.props.player2;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                {/*Set info*/}\r\n                <div className=\"card-header\">\r\n                    <span>{set.leagueName} - {ClimbClient.SetTypes[set.setType]} - {set.dueDate.toLocaleDateString()}</span>\r\n                </div>\r\n\r\n                <div className=\"p-2\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        {/*Player 1*/}\r\n                        <div className=\"d-flex\">\r\n                            <img src={player1.profilePicture} width=\"100\" height=\"100\"/>\r\n                            <div className=\"ml-2\">\r\n                                <div>↓</div>\r\n                                <h3>{player1.rank === 0 ? \"•\" : player1.rank}</h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h1 className=\"align-self-center\">vs</h1>\r\n\r\n                        {/*Player 2*/}\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"mr-2\">\r\n                                <div>↑</div>\r\n                                <h3>{player2.rank === 0 ? \"•\" : player2.rank}</h3>\r\n                            </div>\r\n                            <img src={player2.profilePicture} width=\"100\" height=\"100\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*Usernames*/}\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <a href={`/users/home/${player1.userID}`}>{player1.username}</a>\r\n                        <a href={`/users/home/${player2.userID}`}>{player2.username}</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nimport { ClimbClient } from \"../gen/climbClient\";\r\nimport { Submit } from \"./Submit\";\r\n\r\ninterface IMatchSummaryProps {\r\n    game: ClimbClient.GameDto;\r\n    match: ClimbClient.MatchDto;\r\n    onSelect: (match: ClimbClient.MatchDto) => void;\r\n}\r\n\r\nexport class MatchSummary extends React.Component<IMatchSummaryProps> {\r\n    constructor(props: IMatchSummaryProps) {\r\n        super(props);\r\n\r\n        this.renderCharacter = this.renderCharacter.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const match = this.props.match;\r\n        const game = this.props.game;\r\n\r\n        if (match.player1Characters == null) return null;\r\n        if (match.player2Characters == null) return null;\r\n\r\n        const p1Characters = match.player1Characters.map(this.renderCharacter);\r\n        const p2Characters = match.player2Characters.map(this.renderCharacter);\r\n\r\n        const stageView = this.renderStage(match, game);\r\n\r\n        return (\r\n            <div className=\"card\" onClick={() => this.props.onSelect(match)}>\r\n                <h6 className=\"card-header mb-1\">{game.matchName} {match.index + 1}</h6>\r\n                <div className=\"d-flex justify-content-around card-text align-items-center px-2\">\r\n                    <div>{p1Characters}</div>\r\n                    <h4 className=\"match-score\">{match.player1Score} - {match.player2Score}</h4>\r\n                    <div>{p2Characters}</div>\r\n                </div>\r\n                {stageView}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderCharacter(characterId: number, key: number) : JSX.Element | null {\r\n        const game = this.props.game;\r\n        if (!game || !game.characters) return null;\r\n        const character = game.characters.find(gC => gC.id === characterId);\r\n        if (!character) return null;\r\n        return <img key={key} src={character.picture} title={character.name} width=\"32\" height=\"32\"/>;\r\n    }\r\n\r\n    private renderStage(match: ClimbClient.MatchDto, game: ClimbClient.GameDto) {\r\n        if (!game.stages) throw new Error(\"Stages are not loaded.\");\r\n\r\n        const stage = game.stages.find((s: any) => s.id === match.stageID);\r\n\r\n        let stageName = Submit.missingStageName;\r\n        if (stage != null) {\r\n            stageName = stage.name;\r\n        }\r\n\r\n        return <div className=\"match-summary-stage\">{stageName}</div>;\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nimport { ClimbClient } from \"../gen/climbClient\";\r\nimport { Submit } from \"./Submit\";\r\n\r\ninterface IMatchEditProps {\r\n    game: ClimbClient.GameDto;\r\n    match: ClimbClient.MatchDto;\r\n    player1Name: string;\r\n    player2Name: string;\r\n    onEdit: (match: ClimbClient.MatchDto) => void;\r\n    onCancel: () => void;\r\n    onDelete: () => void;\r\n}\r\n\r\ninterface IMatchEditState {\r\n    match: ClimbClient.MatchDto;\r\n}\r\n\r\nexport class MatchEdit extends React.Component<IMatchEditProps, IMatchEditState> {\r\n    constructor(props: IMatchEditProps) {\r\n        super(props);\r\n\r\n        const match = this.props.match;\r\n        const matchToEdit = new ClimbClient.MatchDto(match);\r\n\r\n        if (!match.player1Characters || !match.player2Characters) throw new Error();\r\n        matchToEdit.player1Characters = match.player1Characters.slice(0);\r\n        matchToEdit.player2Characters = match.player2Characters.slice(0);\r\n\r\n        this.state = {\r\n            match: matchToEdit,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const match = this.state.match;\r\n        const game = this.props.game;\r\n\r\n        if (!game.characters || !game.stages) throw new Error();\r\n        if (!match.player1Characters || !match.player2Characters) throw new Error();\r\n\r\n        game.characters.sort((c1, c2) => c1.name.localeCompare(c2.name));\r\n        game.stages.sort((s1, s2) => s1.name.localeCompare(s2.name));\r\n\r\n        const characters = game.characters.map((c: any) => <option key={c.id} value={c.id}>{c.name}</option>);\r\n        const canOk = match.player1Score !== match.player2Score;\r\n        const stageInput = this.renderStageInput(game.stages, match.stageID);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"d-flex justify-content-start\">\r\n                    <button className=\"btn btn-sm btn-danger\" onClick={this.props.onDelete}>Delete</button>\r\n                </div>\r\n\r\n                <h3>{game.matchName} {match.index + 1}</h3>\r\n                {this.renderPlayerInputs(1, this.props.player1Name, characters, match.player1Characters, game)}\r\n                <hr/>\r\n                {this.renderPlayerInputs(2, this.props.player2Name, characters, match.player2Characters, game)}\r\n                {stageInput}\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <button className=\"btn btn-secondary\" onClick={this.props.onCancel}>Cancel</button>\r\n                    <button className=\"btn btn-primary\" disabled={!canOk} onClick={() => this.props.onEdit(this.state.match)}>Ok</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderPlayerInputs(playerNumber: number, playerName: string, characters: JSX.Element[], characterValues: number[], game: ClimbClient.GameDto) {\r\n        const match = this.state.match;\r\n        const score = playerNumber === 1 ? match.player1Score : match.player2Score;\r\n        \r\n        const characterInputs:JSX.Element[] = [];\r\n        for (let i = 0; i < game.charactersPerMatch; i++) {\r\n            characterInputs.push(\r\n                <select className=\"form-control\" key={i} value={characterValues[i]} onChange={(e: any) => this.updateCharacter(playerNumber, i, parseInt(e.currentTarget.value))}>{characters}</select>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {/*Player Name*/}\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-form-label col-4 text-right\">Player {playerNumber}</label>\r\n                    <div className=\"col-8\">\r\n                        <input type=\"text\" readOnly className=\"form-control\" value={playerName} />\r\n                    </div>\r\n                </div>\r\n\r\n                {/*Score*/}\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-form-label col-4 text-right\">{game.scoreName}</label>\r\n                    <div className=\"col-8\">\r\n                        <input className=\"form-control\" type=\"number\" value={score} min=\"0\" max={game.maxMatchPoints} onChange={(e: any) => this.updateScore(playerNumber, parseInt(e.currentTarget.value))}/>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*Characters*/}\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-form-label col-4 text-right\">{`Character${game.charactersPerMatch > 1 ? \"s\" : \"\"}`}</label>\r\n                    <div className=\"col-8\">\r\n                        {characterInputs}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderStageInput(stageValues: ClimbClient.StageDto[], currentStage: number | undefined) {\r\n        if (stageValues.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const stageOptions = stageValues.map((s: any) => <option key={s.id} value={s.id}>{s.name}</option>);\r\n        stageOptions.splice(0, 0, <option key={0} value={undefined}>{Submit.missingStageName}</option>);\r\n\r\n        const elements = (\r\n            <div>\r\n                <hr/>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-form-label col-4 text-right\">Stage</label>\r\n                    <div className=\"col-8\">\r\n                        <select className=\"form-control\" value={currentStage} onChange={(e: any) => this.updateStage(parseInt(e.currentTarget.value))}>{stageOptions}</select>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n\r\n        return elements;\r\n    }\r\n\r\n    private updateScore(playerNumber: number, score: number) {\r\n        const match = this.state.match;\r\n        if (playerNumber === 1) {\r\n            match.player1Score = score;\r\n        } else {\r\n            match.player2Score = score;\r\n        }\r\n\r\n        this.setState({ match: match });\r\n    }\r\n\r\n    private updateCharacter(playerNumber: number, characterIndex: number, characterId: number) {\r\n        const match = this.state.match;\r\n\r\n        const characters = playerNumber === 1 ? match.player1Characters : match.player2Characters;\r\n        if (characters == null) throw new Error();\r\n        characters[characterIndex] = characterId;\r\n\r\n        this.setState({ match: match });\r\n    }\r\n\r\n    private updateStage(stageId: number) {\r\n        const match = this.state.match;\r\n        match.stageID = stageId;\r\n        this.setState({ match: match });\r\n    }\r\n}","import * as React from \"react\";\r\nimport { ClimbClient } from \"../gen/climbClient\";\r\n\r\ninterface ISetCountProps {\r\n    set: ClimbClient.SetDto;\r\n}\r\n\r\nexport class SetCount extends React.Component<ISetCountProps> {\r\n    render() {\r\n        const set = this.props.set;\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <h1>{set.player1Score || 0} - {set.player2Score || 0}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { ClimbClient } from \"../gen/climbClient\";\r\nimport { SetDetails } from \"./SetDetails\";\r\nimport { MatchSummary } from \"./MatchSummary\";\r\nimport { MatchEdit } from \"./MatchEdit\";\r\nimport { SetCount } from \"./SetCount\";\r\n\r\ninterface ISetSubmitState {\r\n    set: ClimbClient.SetDto | null;\r\n    selectedMatch: ClimbClient.MatchDto | null;\r\n    game: ClimbClient.GameDto | null;\r\n    player1: ClimbClient.LeagueUserDto | null;\r\n    player2: ClimbClient.LeagueUserDto | null;\r\n}\r\n\r\nexport class Submit extends React.Component<RouteComponentProps<any>, ISetSubmitState> {\r\n    client: ClimbClient.SetApi;\r\n    setId: number;\r\n\r\n    static readonly missingStageName = \"-----\";\r\n\r\n    constructor(props: RouteComponentProps<any>) {\r\n        super(props);\r\n\r\n        this.client = new ClimbClient.SetApi(window.location.origin);\r\n        this.setId = this.props.match.params.setID;\r\n\r\n        this.state = {\r\n            set: null,\r\n            selectedMatch: null,\r\n            game: null,\r\n            player1: null,\r\n            player2: null,\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onAddMatch = this.onAddMatch.bind(this);\r\n        this.onMatchEdited = this.onMatchEdited.bind(this);\r\n        this.onMatchCancelled = this.onMatchCancelled.bind(this);\r\n        this.onMatchDelete = this.onMatchDelete.bind(this);\r\n        this.onSelectMatch = this.onSelectMatch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSet();\r\n    }\r\n\r\n    render() {\r\n        const game = this.state.game;\r\n        const set = this.state.set;\r\n        const player1 = this.state.player1;\r\n        const player2 = this.state.player2;\r\n        if (!set || !set.matches || !game || !player1 || !player2)\r\n            return <div id=\"loader\">\r\n                       Loading\r\n                   </div>;\r\n\r\n        if (this.state.selectedMatch != null) {\r\n            return <MatchEdit match={this.state.selectedMatch}\r\n                              game={game}\r\n                              player1Name={player1.username}\r\n                              player2Name={player2.username}\r\n                              onEdit={this.onMatchEdited}\r\n                              onCancel={this.onMatchCancelled}\r\n                              onDelete={this.onMatchDelete}/>;\r\n        }\r\n\r\n        const matches = set.matches.map(\r\n            (m: any, i: any) => <MatchSummary key={i}\r\n                                              game={game}\r\n                                              match={m}\r\n                                              onSelect={this.onSelectMatch}/>);\r\n\r\n        const canSubmit = set.player1Score !== set.player2Score;\r\n\r\n        return (\r\n            <div className=\"pb-4\">\r\n                <SetDetails set={set} player1={player1} player2={player2}/>\r\n                <SetCount set={set}/>\r\n\r\n                <div className=\"card-deck\">{matches}</div>\r\n\r\n                {!set.isLocked &&\r\n                    <div className=\"mt-4\">\r\n                        <div>\r\n                        <button id=\"add-button\" className=\"btn btn-primary\" onClick={this.onAddMatch}>Add {game.matchName}</button>\r\n                        </div>\r\n                \r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <button id=\"submit-button\" className=\"btn btn-danger mt-4\" disabled={!canSubmit} onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private loadSet() {\r\n        this.client.get(this.setId)\r\n            .then(set => {\r\n                if (set.matches != null) {\r\n                    set.matches.sort((a: any, b: any) => a.index - b.index);\r\n                }\r\n                this.setState({ set: set });\r\n                this.loadGame(set.gameID);\r\n                this.loadPlayers(set.player1ID, set.player2ID);\r\n            })\r\n            .catch(reason => `Could not load set\\n${reason}`);\r\n    }\r\n\r\n    private loadGame(gameId: number) {\r\n        const gameClient = new ClimbClient.GameApi(window.location.origin);\r\n        gameClient.get(gameId)\r\n            .then(game => this.setState({ game: game }))\r\n            .catch(reason => alert(`Can't load game\\n${reason}`));\r\n    }\r\n\r\n    private loadPlayers(p1: number, p2: number) {\r\n        const leagueClient = new ClimbClient.LeagueApi(window.location.origin);\r\n        leagueClient.getUser(p1)\r\n            .then(player1 => this.setState({ player1: player1 }))\r\n            .catch(reason => alert(`Could not load player 1\\n${reason}`));\r\n        leagueClient.getUser(p2)\r\n            .then(player2 => this.setState({ player2: player2 }))\r\n            .catch(reason => alert(`Could not load player 2\\n${reason}`));\r\n    }\r\n\r\n    private onMatchCancelled() {\r\n        this.setState({ selectedMatch: null });\r\n    }\r\n\r\n    private onMatchEdited(match: ClimbClient.MatchDto) {\r\n        const set = this.state.set;\r\n        if (!set || !set.matches) throw new Error();\r\n\r\n        set.matches[match.index] = match;\r\n\r\n        set.player1Score = set.player2Score = 0;\r\n        for (let i = 0; i < set.matches.length; i++) {\r\n            const match = set.matches[i];\r\n            if (match.player1Score > match.player2Score) {\r\n                ++set.player1Score;\r\n            } else {\r\n                ++set.player2Score;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            selectedMatch: null,\r\n            set: set,\r\n        });\r\n    }\r\n\r\n    private onMatchDelete() {\r\n        const selectedMatch = this.state.selectedMatch;\r\n        if (!selectedMatch) throw new Error(\"Selected match can't be null.\");\r\n\r\n        const index = selectedMatch.index;\r\n\r\n        const set = this.state.set;\r\n        if (!set || !set.matches) throw new Error(\"Set and Matches can't be null\");\r\n        set.matches.splice(index, 1);\r\n\r\n        for (let i = 0; i < set.matches.length; i++) {\r\n            set.matches[i].index = i;\r\n        }\r\n\r\n        this.setState({\r\n            set: set,\r\n            selectedMatch: null,\r\n        });\r\n    }\r\n\r\n    private onSubmit() {\r\n        const set = this.state.set;\r\n        if (!set || !set.matches) throw new Error();\r\n\r\n        const setRequest = new ClimbClient.SubmitRequest();\r\n        setRequest.setID = set.id;\r\n        setRequest.matches = new Array<ClimbClient.MatchForm>(set.matches.length);\r\n\r\n        for (let i = 0; i < set.matches.length; i++) {\r\n            const match = set.matches[i];\r\n            const matchForm = new ClimbClient.MatchForm();\r\n            matchForm.init(match);\r\n            setRequest.matches[i] = matchForm;\r\n        }\r\n\r\n        this.client.submit(setRequest)\r\n            .then(() => {\r\n                console.log(\"Set submitted!\");\r\n                window.location.reload();\r\n            })\r\n            .catch(reason => alert(`Could not submit set\\n${reason}`));\r\n    }\r\n\r\n    private onAddMatch() {\r\n        const set = this.state.set;\r\n        const game = this.state.game;\r\n        if (!set || !set.matches || !game) throw new Error();\r\n\r\n        const newMatch = new ClimbClient.MatchDto();\r\n        newMatch.index = set.matches.length;\r\n\r\n        newMatch.player1Score = 0;\r\n        newMatch.player2Score = 0;\r\n\r\n        if (newMatch.index > 0) {\r\n            const prevMatch = set.matches[newMatch.index - 1];\r\n            if (!prevMatch.player1Characters || !prevMatch.player2Characters) throw new Error();\r\n            newMatch.player1Characters = prevMatch.player1Characters.slice(0);\r\n            newMatch.player2Characters = prevMatch.player2Characters.slice(0);\r\n        } else {\r\n            const characters = game.characters;\r\n            \r\n            newMatch.player1Characters = [];\r\n            newMatch.player2Characters = [];\r\n\r\n            for (let i = 0; i < game.charactersPerMatch; i++) {\r\n                newMatch.player1Characters.push(characters[i].id);\r\n                newMatch.player2Characters.push(characters[i].id);\r\n            }\r\n        }\r\n\r\n        this.setState({ selectedMatch: newMatch });\r\n    }\r\n\r\n    private onSelectMatch(match: ClimbClient.MatchDto) {\r\n        const set = this.state.set;\r\n        if (set && !set.isLocked) {\r\n            this.setState({ selectedMatch: match });\r\n        }\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { AppContainer } from \"react-hot-loader\";\r\nimport * as ReactRouterDOM from \"react-router-dom\";\r\nimport { Submit } from \"./Submit\";\r\n\r\nfunction renderApp() {\r\n    ReactDOM.render(\r\n        <AppContainer>\r\n            <ReactRouterDOM.BrowserRouter>\r\n                <ReactRouterDOM.Route path=\"/sets/fight/:setID\" component={Submit} />\r\n            </ReactRouterDOM.BrowserRouter>\r\n        </AppContainer>,\r\n        document.getElementById(\"react-app\")\r\n    );\r\n}\r\n\r\nrenderApp();","\"use strict\";function _interopDefault(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(require(\"react\")),classCallCheck=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},inherits=function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)},possibleConstructorReturn=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e},AppContainer=function(t){function e(){return classCallCheck(this,e),possibleConstructorReturn(this,t.apply(this,arguments))}return inherits(e,t),e.prototype.render=function(){return React.Children.only(this.props.children)},e}(React.Component),hot_prod=function(){return function(t){return t}},areComponentsEqual=function(t,e){return t===e},setConfig=function(){},cold=function(t){return t};exports.AppContainer=AppContainer,exports.hot=hot_prod,exports.areComponentsEqual=areComponentsEqual,exports.setConfig=setConfig,exports.cold=cold;\n"],"sourceRoot":""}